apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Release.Name }}"
  labels:
    {{- include "sausage-store.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - image: {{ .Values.global.imageRegistry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          name: {{ .Values.name }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: mongo-helm
                  key: postgres_host
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-helm
                  key: postgres_user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-helm
                  key: postgres_password
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongo-helm
                  key: mongo_host
            - name: DB
              valueFrom:
                secretKeyRef:
                  name: mongo-helm
                  key: mongo_db
            - name: SPRING_FLYWAY_BASELINE-ON-MIGRATE
              value: "{{ .Values.global.springFlywayBaseline }}"
            - name: REPORT_PATH
              value: "{{ .Values.global.reportPath }}"
            - name: spring.cloud.vault.enabled
              value: "{{ .Values.global.springCloudVaultEnabled }}"
            - name: SPRING_FLYWAY_ENABLED
              value: "{{ .Values.global.springFlywayEnables }}"
            - name: PORT
              value: "{{ .Values.global.backendPort }}"
          ports:
            - name: backend-report
              containerPort: {{ .Values.global.backendPort | int }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.global.backendPort | int }}
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 2
            failureThreshold: 6
      imagePullSecrets:
        - name: docker-config-secret-helm

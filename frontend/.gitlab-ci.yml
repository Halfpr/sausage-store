variables:
   VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - release
   - deploy
   - report

   

before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

build:
   stage: build
   script:        
    - cd frontend
    - npm install
    - npm run build  
   artifacts:
    paths:
      - frontend/dist/frontend
   rules:
      - changes:
           - frontend/**/*
   cache:
    paths:
    - .npm/


release:
   stage: release
   script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
   rules:
      - changes:
           - frontend/**/*


deploy:
   stage: deploy
   script:
    - ssh ${DEV_USER}@${DEV_HOST} "id"  
    - scp ./frontend/frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/frontend.service
    - scp ./frontend/deployfront.sh ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/deployfront.sh
    - ssh -v ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL_FRONTEND=${NEXUS_REPO_URL_FRONTEND}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash  " /home/student/deployfront.sh
   environment:
      name: frontend/$CI_COMMIT_REF_SLUG
      url: http://std-015-31.praktikum-services.tech/
   when: manual

send-report: #задача настройка уведомлений
   stage: report #этап report
   script: #запуск скрипта    
    - > #Настройка уведомлений
      curl -X POST -H 'Content-type: application/json' --data '{"chat_id": "-1001657575944","text":"Вышла новая версия сосичной - '"${VERSION}"'\nСкачать Frontend можно по ссылке - <https://nexus.k8s.praktikum-services.tech/repository/sausage-storee-amrakhov-anar-frontend//sausage-store-front/sausage-store/'"${VERSION}"'/sausage-store-'"${VERSION}"'.tar.gz"}' https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage

#sonarqube-frontend-sast:
#  stage: test
#  before_script: []
#  image:
#    name: sonarsource/sonar-scanner-cli:latest
#    entrypoint: [""]  
#  script:
#    - cd frontend
#    - sonar-scanner
#      -Dsonar.qualitygate.wait=true 
#      -Dsonar.projectKey=$PROJECTKEY2
#      -Dsonar.sources=.
#      -Dsonar.host.url=$HOST
#      -Dsonar.login=$LOGIN2  
#  allow_failure: true

variables:
   VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   JAVA_OPTS: -XX:MaxRAMPercentage=90

#before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
 # - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
 # - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  ##- mkdir -p ~/.ssh
  #- chmod 600 ~/.ssh
  #- echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  #- chmod 644 ~/.ssh/known_hosts

stages:
   - build
   - test
   - release
   - deploy
   - report


build-backend-code-job:
   stage: build  
  
   script:
     - cd backend
     - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}

   rules:
      - changes:
           - backend/**/*
   artifacts:
     paths:
       - backend/target/sausage-store-${VERSION}.jar
       - ${CI_PROJECT_DIR}/.m2/

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  script:
    - cd backend  
    - mvn verify sonar:sonar 
        -Dsonar.qualitygate.wait=true
        -Dsonar.projectKey=$PROJECTKEY
        -Dsonar.host.url=$HOST
        -Dsonar.login=$LOGIN
  allow_failure: true

release:
   stage: release
   script:
      - cd backend
      - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy
   rules:
      - changes:
           - backend/**/*


  
deploy:
   stage: deploy
   script:
      - ssh ${DEV_USER}@${DEV_HOST} "id"
      - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
      - scp ./backend/deployback.sh ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/deployback.sh
      - ssh -v ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash  " /home/student/deployback.sh
   environment:
      name: backend/$CI_COMMIT_REF_SLUG
      url: http://std-015-31.praktikum-services.tech/
   when: manual

send-report: #задача настройка уведомлений
   stage: report #этап report
   script: #запуск скрипта    
    - > #Настройка уведомлений
      curl -X POST -H 'Content-type: application/json' --data '{"chat_id": "-1001657575944","text":"Вышла новая версия сосичной - '"${VERSION}"'\nСкачать Backend можно по ссылке - <https://nexus.k8s.praktikum-services.tech/repository/sausage-store-amrakhov-anar-backend/com/yandex/practicum/devops/sausage-store/'"${VERSION}"'/sausage-store-'"${VERSION}"'.jar"}' https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage

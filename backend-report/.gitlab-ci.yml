include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'


variables:
   VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   JAVA_OPTS: -XX:MaxRAMPercentage=90

stages:
   - build
   - test
   - release

build-backend-code-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
      .
- docker push $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16

  script:
    - cd backend  
    - mvn verify sonar:sonar 
        -Dsonar.qualitygate.wait=true
        -Dsonar.projectKey=$PROJECTKEY
        -Dsonar.host.url=$HOST
        -Dsonar.login=$LOGIN
  allow_failure: true

release:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA
    # если образ прошел проверки в CI (сканирование, тесты и т.д), то тегаем latest
    - docker tag $CI_REGISTRY_IMAGE/sausage-backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-backend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:latest
